name: Build and Release Binary

on:
  push:
    tags:
      - '*'  # Triggers on any tag

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y build-essential

      - name: Compile the program (Linux/macOS)
        run: |
          mkdir -p build
          make all
          ls -lh ./build/erosDB

      - name: Rename and upload artifact
        run: mv build/erosDB erosDB-${{ matrix.os }}-${{ github.ref_name }} # Rename the artifact to match the OS

      - name: Upload artifact for release
        uses: actions/upload-artifact@v3
        with:
          name: erosDB-${{ matrix.os }}-${{ github.ref_name }}
          path: erosDB-${{ matrix.os }}-${{ github.ref_name }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code  # Add this step to ensure the repo is cloned
        uses: actions/checkout@v3

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: erosDB-ubuntu-latest-${{ github.ref_name }}

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: erosDB-macos-latest-${{ github.ref_name }}

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Create GitHub Release with GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh release create ${{ github.ref }} erosDB-ubuntu-latest-${{ github.ref_name }}#erosDB-linux erosDB-macos-latest-${{ github.ref_name }}#erosDB-macos --title "Release ${{ github.ref }}" --notes "Automated release for ${{ github.ref }}"
